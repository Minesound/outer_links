---
export interface Props {
	data: any;
}

const {data} = Astro.props as Props;
---

{
	data.map(({title, description, url, img, alt}) => 
	<li class="link-card">

		<img src={img} alt={alt} loading="lazy"/>

		<div class="link-card-content">
				<a href={url}>
					<h2 class="font-bold">
						{title}
						<span>&rarr;</span>
					</h2>
					{
						description  === '' ?
						 (null) :
						(
							<p>
								{description}
							</p>
						)
					}	
				</a>	
		</div>
	</li>
	)
}

<style>

	.link-card {
		display: flex;
		align-items: center;
		list-style: none;
		padding: 0.15rem;
		background-size: 400%;
		border-radius: 0.5rem;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		max-width: 41.7rem;
		width: 99%;
		margin: 0 auto;
		background-color: #fafafa0a;
		overflow: hidden;
		min-height: 10rem;
	}

	@media (max-width: 768px) {
		.link-card {
			flex-direction: column;
			align-items: flex-start;
		}
	}

	.link-card > img {
		width: 5rem;
		height: 5rem;
		margin: 1.5rem 1.5rem;
		border-radius: 5px;
		object-fit: cover;
	}

	@media (max-width: 768px) {
		.link-card img {
			margin: 1.5rem 0 0 2rem;
		}
	}

	.link-card-content {
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.link-card > div > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: 1em 1.3em 1em .8em;
		border-radius: 0.35rem;
		color: #f5f5f5;
		opacity: 0.8;
	}

	h2 {
		margin: 0;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}

	p {
		margin-top: 0.75rem;
		margin-bottom: 0;
	}

	h2 span {
		display: inline-block;
		transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1);
	}

	.link-card:is(:hover, :focus-within) {
		background-position: 0;
	}

	.link-card:is(:hover, :focus-within) h2 {
		color: #4f39fa;
	}

	.link-card:is(:hover, :focus-within) h2 span {
		will-change: transform;
		transform: translateX(2px);
	}
</style>
